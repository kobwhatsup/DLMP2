# DLMP 备份CronJob配置
# 自动化数据库和文件备份

# MySQL全量备份 - 每日凌晨3点
apiVersion: batch/v1
kind: CronJob
metadata:
  name: mysql-full-backup
  namespace: dlmp-production
  labels:
    app: mysql-backup
    backup-type: full
    environment: production
spec:
  schedule: "0 3 * * *"  # 每日3点
  timeZone: "Asia/Shanghai"
  concurrencyPolicy: Forbid
  failedJobsHistoryLimit: 3
  successfulJobsHistoryLimit: 3
  startingDeadlineSeconds: 300
  jobTemplate:
    metadata:
      labels:
        app: mysql-backup
        backup-type: full
    spec:
      template:
        metadata:
          labels:
            app: mysql-backup
            backup-type: full
        spec:
          restartPolicy: OnFailure
          serviceAccountName: backup-service-account
          
          containers:
            - name: mysql-backup
              image: mysql:8.0
              command: ["/bin/bash", "/scripts/mysql-backup.sh", "full"]
              
              env:
                - name: DB_ROOT_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: dlmp-database-secret
                      key: DB_ROOT_PASSWORD
                - name: AWS_ACCESS_KEY_ID
                  valueFrom:
                    secretKeyRef:
                      name: backup-s3-secret
                      key: access-key-id
                - name: AWS_SECRET_ACCESS_KEY
                  valueFrom:
                    secretKeyRef:
                      name: backup-s3-secret
                      key: secret-access-key
                - name: BACKUP_ENCRYPTION_KEY
                  valueFrom:
                    secretKeyRef:
                      name: backup-encryption-secret
                      key: encryption-key
              
              volumeMounts:
                - name: backup-scripts
                  mountPath: /scripts
                - name: backup-config
                  mountPath: /config
                - name: backup-storage
                  mountPath: /backup
                - name: mysql-data
                  mountPath: /var/lib/mysql
                  readOnly: true
              
              resources:
                requests:
                  memory: "512Mi"
                  cpu: "250m"
                limits:
                  memory: "2Gi"
                  cpu: "1"
              
              securityContext:
                runAsNonRoot: true
                runAsUser: 1000
                allowPrivilegeEscalation: false
          
          volumes:
            - name: backup-scripts
              configMap:
                name: backup-scripts
                defaultMode: 0755
            - name: backup-config
              configMap:
                name: backup-config
            - name: backup-storage
              persistentVolumeClaim:
                claimName: dlmp-backup
            - name: mysql-data
              persistentVolumeClaim:
                claimName: data-mysql-master-0

---
# MySQL增量备份 - 每小时
apiVersion: batch/v1
kind: CronJob
metadata:
  name: mysql-incremental-backup
  namespace: dlmp-production
  labels:
    app: mysql-backup
    backup-type: incremental
    environment: production
spec:
  schedule: "0 * * * *"  # 每小时
  timeZone: "Asia/Shanghai"
  concurrencyPolicy: Forbid
  failedJobsHistoryLimit: 5
  successfulJobsHistoryLimit: 3
  startingDeadlineSeconds: 180
  jobTemplate:
    metadata:
      labels:
        app: mysql-backup
        backup-type: incremental
    spec:
      template:
        metadata:
          labels:
            app: mysql-backup
            backup-type: incremental
        spec:
          restartPolicy: OnFailure
          serviceAccountName: backup-service-account
          
          containers:
            - name: mysql-backup
              image: mysql:8.0
              command: ["/bin/bash", "/scripts/mysql-backup.sh", "incremental"]
              
              env:
                - name: DB_ROOT_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: dlmp-database-secret
                      key: DB_ROOT_PASSWORD
                - name: AWS_ACCESS_KEY_ID
                  valueFrom:
                    secretKeyRef:
                      name: backup-s3-secret
                      key: access-key-id
                - name: AWS_SECRET_ACCESS_KEY
                  valueFrom:
                    secretKeyRef:
                      name: backup-s3-secret
                      key: secret-access-key
              
              volumeMounts:
                - name: backup-scripts
                  mountPath: /scripts
                - name: backup-config
                  mountPath: /config
                - name: backup-storage
                  mountPath: /backup
              
              resources:
                requests:
                  memory: "256Mi"
                  cpu: "100m"
                limits:
                  memory: "1Gi"
                  cpu: "500m"
          
          volumes:
            - name: backup-scripts
              configMap:
                name: backup-scripts
                defaultMode: 0755
            - name: backup-config
              configMap:
                name: backup-config
            - name: backup-storage
              persistentVolumeClaim:
                claimName: dlmp-backup

---
# 文件存储备份 - 每日凌晨2点
apiVersion: batch/v1
kind: CronJob
metadata:
  name: file-storage-backup
  namespace: dlmp-production
  labels:
    app: file-backup
    environment: production
spec:
  schedule: "0 2 * * *"  # 每日2点
  timeZone: "Asia/Shanghai"
  concurrencyPolicy: Forbid
  failedJobsHistoryLimit: 3
  successfulJobsHistoryLimit: 3
  jobTemplate:
    metadata:
      labels:
        app: file-backup
    spec:
      template:
        metadata:
          labels:
            app: file-backup
        spec:
          restartPolicy: OnFailure
          serviceAccountName: backup-service-account
          
          containers:
            - name: file-backup
              image: alpine:3.18
              command: ["/bin/sh", "/scripts/file-backup.sh"]
              
              env:
                - name: AWS_ACCESS_KEY_ID
                  valueFrom:
                    secretKeyRef:
                      name: backup-s3-secret
                      key: access-key-id
                - name: AWS_SECRET_ACCESS_KEY
                  valueFrom:
                    secretKeyRef:
                      name: backup-s3-secret
                      key: secret-access-key
                - name: BACKUP_ENCRYPTION_KEY
                  valueFrom:
                    secretKeyRef:
                      name: backup-encryption-secret
                      key: encryption-key
              
              volumeMounts:
                - name: backup-scripts
                  mountPath: /scripts
                - name: app-data
                  mountPath: /data
                  readOnly: true
                - name: uploads-data
                  mountPath: /uploads
                  readOnly: true
                - name: backup-storage
                  mountPath: /backup
              
              resources:
                requests:
                  memory: "256Mi"
                  cpu: "100m"
                limits:
                  memory: "1Gi"
                  cpu: "500m"
          
          volumes:
            - name: backup-scripts
              configMap:
                name: backup-scripts
                defaultMode: 0755
            - name: app-data
              persistentVolumeClaim:
                claimName: dlmp-backend-data
            - name: uploads-data
              persistentVolumeClaim:
                claimName: dlmp-uploads
            - name: backup-storage
              persistentVolumeClaim:
                claimName: dlmp-backup

---
# 配置备份 - 每周日凌晨4点
apiVersion: batch/v1
kind: CronJob
metadata:
  name: config-backup
  namespace: dlmp-production
  labels:
    app: config-backup
    environment: production
spec:
  schedule: "0 4 * * 0"  # 每周日4点
  timeZone: "Asia/Shanghai"
  concurrencyPolicy: Forbid
  failedJobsHistoryLimit: 2
  successfulJobsHistoryLimit: 2
  jobTemplate:
    metadata:
      labels:
        app: config-backup
    spec:
      template:
        metadata:
          labels:
            app: config-backup
        spec:
          restartPolicy: OnFailure
          serviceAccountName: backup-service-account
          
          containers:
            - name: config-backup
              image: bitnami/kubectl:latest
              command: ["/bin/bash", "/scripts/config-backup.sh"]
              
              env:
                - name: AWS_ACCESS_KEY_ID
                  valueFrom:
                    secretKeyRef:
                      name: backup-s3-secret
                      key: access-key-id
                - name: AWS_SECRET_ACCESS_KEY
                  valueFrom:
                    secretKeyRef:
                      name: backup-s3-secret
                      key: secret-access-key
              
              volumeMounts:
                - name: backup-scripts
                  mountPath: /scripts
                - name: backup-storage
                  mountPath: /backup
              
              resources:
                requests:
                  memory: "128Mi"
                  cpu: "50m"
                limits:
                  memory: "512Mi"
                  cpu: "200m"
          
          volumes:
            - name: backup-scripts
              configMap:
                name: backup-scripts
                defaultMode: 0755
            - name: backup-storage
              persistentVolumeClaim:
                claimName: dlmp-backup

---
# 备份清理 - 每周日凌晨5点
apiVersion: batch/v1
kind: CronJob
metadata:
  name: backup-cleanup
  namespace: dlmp-production
  labels:
    app: backup-cleanup
    environment: production
spec:
  schedule: "0 5 * * 0"  # 每周日5点
  timeZone: "Asia/Shanghai"
  concurrencyPolicy: Forbid
  failedJobsHistoryLimit: 2
  successfulJobsHistoryLimit: 2
  jobTemplate:
    metadata:
      labels:
        app: backup-cleanup
    spec:
      template:
        metadata:
          labels:
            app: backup-cleanup
        spec:
          restartPolicy: OnFailure
          serviceAccountName: backup-service-account
          
          containers:
            - name: cleanup
              image: alpine:3.18
              command: ["/bin/sh", "/scripts/backup-cleanup.sh"]
              
              env:
                - name: AWS_ACCESS_KEY_ID
                  valueFrom:
                    secretKeyRef:
                      name: backup-s3-secret
                      key: access-key-id
                - name: AWS_SECRET_ACCESS_KEY
                  valueFrom:
                    secretKeyRef:
                      name: backup-s3-secret
                      key: secret-access-key
              
              volumeMounts:
                - name: backup-scripts
                  mountPath: /scripts
                - name: backup-storage
                  mountPath: /backup
              
              resources:
                requests:
                  memory: "64Mi"
                  cpu: "50m"
                limits:
                  memory: "256Mi"
                  cpu: "100m"
          
          volumes:
            - name: backup-scripts
              configMap:
                name: backup-scripts
                defaultMode: 0755
            - name: backup-storage
              persistentVolumeClaim:
                claimName: dlmp-backup

---
# 备份验证 - 每日凌晨6点
apiVersion: batch/v1
kind: CronJob
metadata:
  name: backup-verification
  namespace: dlmp-production
  labels:
    app: backup-verification
    environment: production
spec:
  schedule: "0 6 * * *"  # 每日6点
  timeZone: "Asia/Shanghai"
  concurrencyPolicy: Forbid
  failedJobsHistoryLimit: 3
  successfulJobsHistoryLimit: 2
  jobTemplate:
    metadata:
      labels:
        app: backup-verification
    spec:
      template:
        metadata:
          labels:
            app: backup-verification
        spec:
          restartPolicy: OnFailure
          serviceAccountName: backup-service-account
          
          containers:
            - name: verification
              image: mysql:8.0
              command: ["/bin/bash", "/scripts/backup-verify.sh"]
              
              env:
                - name: DB_ROOT_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: dlmp-database-secret
                      key: DB_ROOT_PASSWORD
                - name: AWS_ACCESS_KEY_ID
                  valueFrom:
                    secretKeyRef:
                      name: backup-s3-secret
                      key: access-key-id
                - name: AWS_SECRET_ACCESS_KEY
                  valueFrom:
                    secretKeyRef:
                      name: backup-s3-secret
                      key: secret-access-key
              
              volumeMounts:
                - name: backup-scripts
                  mountPath: /scripts
                - name: backup-storage
                  mountPath: /backup
                - name: temp-storage
                  mountPath: /tmp/verification
              
              resources:
                requests:
                  memory: "256Mi"
                  cpu: "100m"
                limits:
                  memory: "1Gi"
                  cpu: "500m"
          
          volumes:
            - name: backup-scripts
              configMap:
                name: backup-scripts
                defaultMode: 0755
            - name: backup-storage
              persistentVolumeClaim:
                claimName: dlmp-backup
            - name: temp-storage
              emptyDir:
                sizeLimit: 2Gi

---
# ServiceAccount for backup jobs
apiVersion: v1
kind: ServiceAccount
metadata:
  name: backup-service-account
  namespace: dlmp-production
  labels:
    app: backup
    environment: production

---
# ClusterRole for backup operations
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: backup-operator
  labels:
    app: backup
rules:
  - apiGroups: [""]
    resources: ["persistentvolumes", "persistentvolumeclaims"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["pods", "pods/log"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["configmaps", "secrets"]
    verbs: ["get", "list"]
  - apiGroups: ["apps"]
    resources: ["deployments", "statefulsets"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["snapshot.storage.k8s.io"]
    resources: ["volumesnapshots", "volumesnapshotcontents"]
    verbs: ["get", "list", "watch", "create"]

---
# ClusterRoleBinding for backup service account
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: backup-service-account-binding
  labels:
    app: backup
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: backup-operator
subjects:
  - kind: ServiceAccount
    name: backup-service-account
    namespace: dlmp-production