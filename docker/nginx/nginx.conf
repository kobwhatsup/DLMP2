# Nginx配置文件 - 负载均衡和反向代理
# 针对DLMP系统的生产环境优化配置

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# 性能优化配置
worker_rlimit_nofile 65535;

events {
    worker_connections 8192;
    use epoll;
    multi_accept on;
    accept_mutex off;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # 日志格式定义
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    '$request_time $upstream_response_time';
    
    log_format detailed '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for" '
                        '$request_time $upstream_response_time $upstream_addr '
                        '$upstream_status $upstream_connect_time';
    
    access_log /var/log/nginx/access.log detailed;
    
    # 基础性能优化
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    keepalive_requests 1000;
    types_hash_max_size 2048;
    server_tokens off;
    
    # 缓冲区配置
    client_body_buffer_size 16K;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 16k;
    client_max_body_size 100M;
    client_body_timeout 60s;
    client_header_timeout 60s;
    send_timeout 60s;
    
    # Gzip压缩配置
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    # SSL配置
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;
    
    # 限流配置
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=login:10m rate=5r/m;
    limit_req_zone $binary_remote_addr zone=upload:10m rate=2r/s;
    limit_conn_zone $binary_remote_addr zone=conn:10m;
    
    # 上游服务器组定义
    upstream dlmp_backend {
        # 负载均衡算法：加权轮询
        least_conn;
        
        # 后端服务器
        server dlmp-backend-1:8080 weight=1 max_fails=3 fail_timeout=30s;
        server dlmp-backend-2:8080 weight=1 max_fails=3 fail_timeout=30s;
        server dlmp-backend-3:8080 weight=1 max_fails=3 fail_timeout=30s;
        
        # 备用服务器
        server dlmp-backend-backup:8080 backup;
        
        # 连接保持
        keepalive 32;
        keepalive_requests 1000;
        keepalive_timeout 60s;
    }
    
    upstream dlmp_frontend {
        # 前端静态资源服务器
        server dlmp-frontend-1:3000 weight=1 max_fails=3 fail_timeout=30s;
        server dlmp-frontend-2:3000 weight=1 max_fails=3 fail_timeout=30s;
        
        keepalive 16;
    }
    
    # Redis集群代理（如果需要）
    upstream redis_cluster {
        server redis-node-1:6379 weight=1 max_fails=3 fail_timeout=30s;
        server redis-node-2:6379 weight=1 max_fails=3 fail_timeout=30s;
        server redis-node-3:6379 weight=1 max_fails=3 fail_timeout=30s;
        
        keepalive 8;
    }
    
    # 健康检查配置
    upstream dlmp_backend_health {
        server dlmp-backend-1:8080;
        server dlmp-backend-2:8080;
        server dlmp-backend-3:8080;
    }
    
    # 缓存配置
    proxy_cache_path /var/cache/nginx/api levels=1:2 keys_zone=api_cache:10m max_size=1g inactive=60m use_temp_path=off;
    proxy_cache_path /var/cache/nginx/static levels=1:2 keys_zone=static_cache:10m max_size=5g inactive=24h use_temp_path=off;
    
    # 主服务器配置
    server {
        listen 80;
        listen [::]:80;
        server_name dlmp.example.com www.dlmp.example.com;
        
        # HTTP重定向到HTTPS
        return 301 https://$server_name$request_uri;
    }
    
    # HTTPS主服务器
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name dlmp.example.com www.dlmp.example.com;
        
        # SSL证书配置
        ssl_certificate /etc/nginx/ssl/dlmp.crt;
        ssl_private_key /etc/nginx/ssl/dlmp.key;
        ssl_certificate_chain /etc/nginx/ssl/dlmp-chain.crt;
        
        # 安全头配置
        add_header X-Frame-Options DENY always;
        add_header X-Content-Type-Options nosniff always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' wss: https:" always;
        
        # 限制连接数
        limit_conn conn 50;
        
        # 根路径重定向到前端
        location / {
            proxy_pass http://dlmp_frontend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # 缓存静态资源
            location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
                proxy_pass http://dlmp_frontend;
                proxy_cache static_cache;
                proxy_cache_valid 200 24h;
                proxy_cache_valid 404 1m;
                add_header X-Cache-Status $upstream_cache_status;
                expires 1y;
                add_header Cache-Control "public, immutable";
            }
        }
        
        # API接口代理
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://dlmp_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # 超时配置
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 60s;
            
            # 缓冲配置
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            proxy_busy_buffers_size 8k;
            
            # HTTP版本和连接保持
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            
            # 错误处理
            proxy_next_upstream error timeout http_500 http_502 http_503 http_504;
            proxy_next_upstream_tries 3;
            proxy_next_upstream_timeout 30s;
            
            # API缓存（选择性缓存）
            location ~* /api/(dict|config|system)/ {
                proxy_pass http://dlmp_backend;
                proxy_cache api_cache;
                proxy_cache_valid 200 10m;
                proxy_cache_valid 404 1m;
                proxy_cache_key "$scheme$proxy_host$request_uri$http_authorization";
                add_header X-Cache-Status $upstream_cache_status;
            }
        }
        
        # 登录接口特殊限流
        location /api/auth/login {
            limit_req zone=login burst=5 nodelay;
            
            proxy_pass http://dlmp_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # 不缓存认证相关接口
            proxy_cache off;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
        }
        
        # 文件上传接口
        location /api/files/upload {
            limit_req zone=upload burst=3 nodelay;
            
            proxy_pass http://dlmp_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # 文件上传特殊配置
            client_max_body_size 100M;
            proxy_request_buffering off;
            proxy_buffering off;
            proxy_read_timeout 300s;
            proxy_send_timeout 300s;
        }
        
        # WebSocket支持
        location /ws/ {
            proxy_pass http://dlmp_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_read_timeout 86400s;
            proxy_send_timeout 86400s;
        }
        
        # 健康检查端点
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # Nginx状态页面
        location /nginx_status {
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            allow 172.16.0.0/12;
            deny all;
        }
        
        # 错误页面
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /50x.html {
            root /usr/share/nginx/html;
        }
        
        location = /404.html {
            root /usr/share/nginx/html;
        }
    }
    
    # 管理后台（可选的独立域名）
    server {
        listen 443 ssl http2;
        server_name admin.dlmp.example.com;
        
        ssl_certificate /etc/nginx/ssl/dlmp.crt;
        ssl_private_key /etc/nginx/ssl/dlmp.key;
        
        # 管理后台访问控制
        allow 192.168.1.0/24;
        allow 10.0.0.0/8;
        deny all;
        
        location / {
            proxy_pass http://dlmp_frontend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        location /api/ {
            proxy_pass http://dlmp_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
    
    # 监控服务代理
    server {
        listen 443 ssl http2;
        server_name monitor.dlmp.example.com;
        
        ssl_certificate /etc/nginx/ssl/dlmp.crt;
        ssl_private_key /etc/nginx/ssl/dlmp.key;
        
        # 监控服务访问控制
        allow 192.168.1.0/24;
        allow 10.0.0.0/8;
        deny all;
        
        # Prometheus
        location /prometheus/ {
            proxy_pass http://prometheus:9090/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        
        # Grafana
        location /grafana/ {
            proxy_pass http://grafana:3000/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        
        # Redis Commander
        location /redis/ {
            proxy_pass http://redis-commander:8081/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
    }
    
    # 包含其他配置文件
    include /etc/nginx/conf.d/*.conf;
}