version: '3.8'

# Nginx负载均衡器配置
# 提供高可用的反向代理和负载均衡服务

services:
  # 主负载均衡器
  nginx-lb:
    image: nginx:1.24-alpine
    container_name: nginx-lb
    hostname: nginx-lb
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./conf.d:/etc/nginx/conf.d:ro
      - ./ssl:/etc/nginx/ssl:ro
      - ./html:/usr/share/nginx/html:ro
      - ./cache:/var/cache/nginx
      - ./logs:/var/log/nginx
    networks:
      - dlmp-network
    environment:
      - TZ=Asia/Shanghai
    depends_on:
      - nginx-backup
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nginx.rule=Host(`dlmp.example.com`)"
      - "traefik.http.services.nginx.loadbalancer.server.port=80"

  # 备用负载均衡器
  nginx-backup:
    image: nginx:1.24-alpine
    container_name: nginx-backup
    hostname: nginx-backup
    restart: unless-stopped
    ports:
      - "8080:80"
      - "8443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./conf.d:/etc/nginx/conf.d:ro
      - ./ssl:/etc/nginx/ssl:ro
      - ./html:/usr/share/nginx/html:ro
      - ./cache-backup:/var/cache/nginx
      - ./logs:/var/log/nginx
    networks:
      - dlmp-network
    environment:
      - TZ=Asia/Shanghai
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # HAProxy高可用方案（可选）
  haproxy:
    image: haproxy:2.8-alpine
    container_name: haproxy
    hostname: haproxy
    restart: unless-stopped
    ports:
      - "8081:80"
      - "8444:443"
      - "8404:8404"  # HAProxy统计页面
    volumes:
      - ./haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
      - ./ssl:/etc/ssl/certs:ro
    networks:
      - dlmp-network
    environment:
      - TZ=Asia/Shanghai
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8404/stats"]
      interval: 30s
      timeout: 10s
      retries: 3
    profiles:
      - haproxy

  # Keepalived高可用（VIP虚拟IP）
  keepalived-master:
    image: osixia/keepalived:2.0.20
    container_name: keepalived-master
    hostname: keepalived-master
    restart: unless-stopped
    network_mode: host
    cap_add:
      - NET_ADMIN
    volumes:
      - ./keepalived/master.conf:/usr/local/etc/keepalived/keepalived.conf:ro
    environment:
      - KEEPALIVED_INTERFACE=eth0
      - KEEPALIVED_VIRTUAL_IPS=192.168.1.100
      - KEEPALIVED_UNICAST_PEERS=#PYTHON2BASH:['192.168.1.101']
      - KEEPALIVED_PASSWORD=dlmp2023
    profiles:
      - keepalived

  keepalived-backup:
    image: osixia/keepalived:2.0.20
    container_name: keepalived-backup
    hostname: keepalived-backup
    restart: unless-stopped
    network_mode: host
    cap_add:
      - NET_ADMIN
    volumes:
      - ./keepalived/backup.conf:/usr/local/etc/keepalived/keepalived.conf:ro
    environment:
      - KEEPALIVED_INTERFACE=eth0
      - KEEPALIVED_VIRTUAL_IPS=192.168.1.100
      - KEEPALIVED_UNICAST_PEERS=#PYTHON2BASH:['192.168.1.100']
      - KEEPALIVED_PASSWORD=dlmp2023
    profiles:
      - keepalived

  # Nginx Exporter (Prometheus监控)
  nginx-exporter:
    image: nginx/nginx-prometheus-exporter:0.10.0
    container_name: nginx-exporter
    hostname: nginx-exporter
    restart: unless-stopped
    ports:
      - "9113:9113"
    command:
      - '-nginx.scrape-uri=http://nginx-lb/nginx_status'
    networks:
      - dlmp-network
    depends_on:
      - nginx-lb
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:9113/metrics"]
      interval: 30s
      timeout: 10s
      retries: 3
    profiles:
      - monitoring

  # Filebeat日志收集
  filebeat:
    image: docker.elastic.co/beats/filebeat:8.8.0
    container_name: nginx-filebeat
    hostname: nginx-filebeat
    restart: unless-stopped
    user: root
    volumes:
      - ./filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - ./logs:/var/log/nginx:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - dlmp-network
    environment:
      - ELASTICSEARCH_HOSTS=elasticsearch:9200
      - KIBANA_HOST=kibana:5601
    depends_on:
      - nginx-lb
    profiles:
      - logging

  # Fluentd日志处理（备选方案）
  fluentd:
    image: fluent/fluentd:v1.16-debian-1
    container_name: nginx-fluentd
    hostname: nginx-fluentd
    restart: unless-stopped
    ports:
      - "24224:24224"
      - "24224:24224/udp"
    volumes:
      - ./fluentd/fluent.conf:/fluentd/etc/fluent.conf:ro
      - ./logs:/var/log/nginx:ro
    networks:
      - dlmp-network
    environment:
      - FLUENTD_CONF=fluent.conf
    profiles:
      - fluentd

  # SSL证书自动续期
  certbot:
    image: certbot/certbot:latest
    container_name: nginx-certbot
    hostname: nginx-certbot
    restart: "no"
    volumes:
      - ./ssl:/etc/letsencrypt
      - ./certbot-webroot:/var/www/certbot
    command: >
      sh -c "
        certbot certonly --webroot 
        --webroot-path=/var/www/certbot 
        --email admin@dlmp.example.com 
        --agree-tos --no-eff-email 
        -d dlmp.example.com 
        -d www.dlmp.example.com 
        -d admin.dlmp.example.com 
        -d monitor.dlmp.example.com
      "
    profiles:
      - ssl

  # 证书续期定时任务
  certbot-renewer:
    image: certbot/certbot:latest
    container_name: nginx-certbot-renewer
    hostname: nginx-certbot-renewer
    restart: unless-stopped
    volumes:
      - ./ssl:/etc/letsencrypt
      - ./certbot-webroot:/var/www/certbot
      - ./scripts:/scripts
    command: >
      sh -c "
        while :; do
          sleep 12h
          certbot renew --quiet --webroot --webroot-path=/var/www/certbot
          if [ $? -eq 0 ]; then
            /scripts/reload-nginx.sh
          fi
        done
      "
    profiles:
      - ssl

networks:
  dlmp-network:
    name: dlmp-network
    driver: bridge
    ipam:
      config:
        - subnet: 172.18.0.0/16

volumes:
  nginx-cache:
    driver: local
  nginx-logs:
    driver: local
  ssl-certs:
    driver: local